# Día 6: Resolución del Problema `Guard Gallivant`

## Archivos Incluidos
		- 06.cpp (parte 1)
		- 06_2.cpp (parte 2)
      - input.txt (datos)
		- README.md (este archivo)

## Descripción del Problema
Determinar las posiciones del mapa donde colocar un objeto que obstaculice al guardia y quede atrapado en un bucle infinito.

## Motivación para Elegir este Problema
Era el problema del día en advent code.

## Técnicas y Estructuras de Datos Utilizadas

1. Manejo de archivos (ifstream)
2. Búsqueda exhaustiva y fuerza bruta
3. Estructuras de datos:
   - vector<pair<int, int>> para las direcciones de movimiento.
   - set<pair<int, int>> para almacenar las posiciones visitadas.
   - vector<string> para almacenar el mapa.

## Descripción de la Solución

1. Simulamos el movimiento del guardia en una función registrando las posiciones visitadas y verificando diferentes situaciones, devolviendo las posiciones que ha visitado.
2. Leer el mapa `input.txt` y almacenarlo en un string `mapa`. 
3. Buscamos la posicion del guardia en el mapa recorriendo el mapa, si no se encuentra retornamos 1 y finalizamos la operacion.
4. Le pasamos a la funcion del movimiento del guardia el mapa y la posicion. 
5. Returnear las posiciones que ha visitado el guardia, para saber en cuántas posiciones podemos colocar un objeto que le haga entrar en el bucle infinito.


