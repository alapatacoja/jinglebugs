# Día 5: Resolución del Problema `Print Queue`

## Descripción del Problema
Comprobar qué páginas cumplen las reglas de orden y sumar los números de las páginas centrales.

---

## Motivación para Elegir este Problema
Elegimos este problema porque permite practicar técnicas de manejo de estructuras de datos como vectores y parejas.

---

## Técnicas y Estructuras de Datos Utilizadas
   - std::vector: para almacenar tanto las reglas de orden (pares de números) como las secuencias de actualizaciones.
   - pair: para representar cada una de las reglas de dependencia entre las páginas (es decir, el número X debe aparecer antes que Y en la secuencia de actualización).
   - búsqueda: en la función `verificar_updates` se hace una búsqueda para determinar si las reglas entre páginas se respetan.
   - BubbleSort: en la segunda parte del problema para ordenar las actualizaciones.

## Descripción de la Solución
1. Se implementa la función `leerdata` para procesar el archivo `input.txt`. Los datos se dividen en dos partes: 
   - Reglas de orden: Representadas como pares de enteros, leídas en formato `X|Y`.
   - Actualizaciones: Cada línea posterior al bloque de reglas contiene secuencias de enteros separados por comas.

2. Se utiliza la función `verificar_update` para comprobar si una secuencia cumple con las reglas de dependencia. Esta función:
   - Busca la posición de los elementos X e Y en la secuencia.
   - Si X aparece después de Y (violando la regla) y ambos existen en la secuencia, la verificación falla (`false`).

3. La función `medio` se encarga de encontrar el valor en la posición central de una secuencia válida.

4. En la primera parte, si una secuencia cumple las reglas (`verificar_update` devuelve `true`), se suma su valor central al total. En la segunda parte, si una secuencia no cumple las reglas (`verificar_update` devuelve `false`), se corrige su orden utilizando la función `ordenar` y luego se suma el valor central al total.

5. La función `ordenar` implementa un algoritmo de ordenamiento básico. Para cada par de valores en la secuencia:
   - Si detecta que los valores están en un orden que viola las reglas, intercambia sus posiciones (`swap`) hasta que toda la secuencia respete las dependencias.

6. El programa imprime la suma total de las páginas centrales tras procesar todas las secuencias.
         
## Alternativas
En este ejercicio, utilizar tablas hash para localizar las páginas en las secuencias habría permitido búsquedas más rápidas, optimizando la validación de reglas en comparación con la búsqueda lineal.  


## Valoración  
Resolver este problema ha sido muy útil a la hora de practicar el uso de algoritmos de ordenación, aunque sean métodos simples. También nos ha ayudado a aprender a usar `pair`.
